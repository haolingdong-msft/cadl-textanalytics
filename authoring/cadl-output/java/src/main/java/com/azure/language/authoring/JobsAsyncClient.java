// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.language.authoring;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.language.authoring.implementation.JobsImpl;
import reactor.core.publisher.Mono;

/** Initializes a new instance of the asynchronous MicrosoftCognitiveLanguageServiceAnalyzeTextAuthoringClient type. */
@ServiceClient(builder = JobsClientBuilder.class, isAsync = true)
public final class JobsAsyncClient {
    @Generated private final JobsImpl serviceClient;

    /**
     * Initializes an instance of JobsAsyncClient class.
     *
     * @param serviceClient the service client implementation.
     */
    @Generated
    JobsAsyncClient(JobsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Gets the status of an existing deployment job.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     jobId: String (Required)
     *     createdDateTime: String (Required)
     *     lastUpdatedDateTime: String (Required)
     *     expirationDateTime: String (Required)
     *     status: String(notStarted/running/succeeded/failed/cancelled/cancelling/partiallyCompleted) (Required)
     *     warnings (Required): [
     *          (Required){
     *             code: String (Required)
     *             message: String (Required)
     *         }
     *     ]
     *     errors: ResponseError (Required)
     *     id: String (Required)
     * }
     * }</pre>
     *
     * @param projectName The projectName parameter.
     * @param deploymentName The deploymentName parameter.
     * @param jobId The jobId parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the status of an existing deployment job along with {@link Response} on successful completion of {@link
     *     Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getDeploymentStatusWithResponse(
            String projectName, String deploymentName, String jobId, RequestOptions requestOptions) {
        return this.serviceClient.getDeploymentStatusWithResponseAsync(
                projectName, deploymentName, jobId, requestOptions);
    }

    /**
     * Gets the status of an existing swap deployment job.
     *
     * <p><strong>Response Body Schema</strong>
     *
     * <pre>{@code
     * {
     *     jobId: String (Required)
     *     createdDateTime: String (Required)
     *     lastUpdatedDateTime: String (Required)
     *     expirationDateTime: String (Required)
     *     status: String(notStarted/running/succeeded/failed/cancelled/cancelling/partiallyCompleted) (Required)
     *     warnings (Required): [
     *          (Required){
     *             code: String (Required)
     *             message: String (Required)
     *         }
     *     ]
     *     errors: ResponseError (Required)
     *     id: String (Required)
     * }
     * }</pre>
     *
     * @param projectName The projectName parameter.
     * @param deploymentName The deploymentName parameter.
     * @param jobId The jobId parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the status of an existing swap deployment job along with {@link Response} on successful completion of
     *     {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> getSwapDeploymentsStatusWithResponse(
            String projectName, String deploymentName, String jobId, RequestOptions requestOptions) {
        return this.serviceClient.getSwapDeploymentsStatusWithResponseAsync(
                projectName, deploymentName, jobId, requestOptions);
    }
}
